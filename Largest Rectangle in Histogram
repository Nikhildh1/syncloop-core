class Solution {
    public int largestRectangleArea(int[] arr) {
        int nsr[]=new int[arr.length];
		int nsl[]=new int[arr.length];
		int marea=0;
		Stack<Integer>s=new Stack<>();
		for(int i=arr.length-1;i>=0;i--){
			while(!s.isEmpty() && arr[s.peek()]>=arr[i]){
				s.pop();
			}
			if(s.isEmpty()){
				nsr[i]=arr.length;
			}
			else{
				nsr[i]=s.peek();
			}
			s.push(i);
		}
		s=new Stack<>();
		for(int i=0;i<arr.length;i++){
			while(!s.isEmpty() && arr[s.peek()]>=arr[i]){
				s.pop();
			}
			if(s.isEmpty()){
				nsl[i]=-1;
			}
			else{
				nsl[i]=s.peek();
			}
			s.push(i);
		}
		for(int i=0;i<arr.length;i++){
			int h=arr[i];
			int w=nsr[i]-nsl[i]-1;
			int currarea=h*w;
			marea=Math.max(marea,currarea);
		}
		return marea;
    }
}
